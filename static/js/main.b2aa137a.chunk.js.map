{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","styles","container","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","catch","error","id","delete","get","console","log","getFilter","state","contacts","filter","getLoading","loading","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","createReducer","_","payload","action","combineReducers","connect","onSubmit","contactsOperations","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","preventDefault","options","find","alert","form","label","input","type","pattern","title","required","onChange","btn","contactsSelectors","isLoadingContacts","onDeleteContact","useDispatch","useEffect","color","height","width","list","map","item","onClick","target","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devtools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2aa137a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2xAus\",\"item\":\"ContactList_item__1JgX1\",\"btn\":\"ContactList_btn__12dj7\",\"loader\":\"ContactList_loader__3Bv9a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Ts-l\",\"input\":\"Filter_input__2c6fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2M0Q3\"};","import styles from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = ' http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => {\n      console.log(data);\n      dispatch(fetchContactsSuccess(data));\n    })\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n// dispatch функцию, которая выполняется\n// const asyncActionCreator = args => dispatch => {};\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest(id));\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getLoading, getFilter, getVisibleContacts };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactForm.module.css';\r\nimport { contactsOperations } from 'redux/contacts';\r\n\r\nfunction ContactForm({ onSubmit, contacts }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const options = { name, number };\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      onSubmit(options);\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => ({\r\n  contacts: items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(contactsOperations.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { useDispatch, connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact, isLoadingContacts }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {isLoadingContacts && (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={50}\r\n          width={50}\r\n          className=\"loader\"\r\n        />\r\n      )}\r\n      {\r\n        <ul className={styles.list}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <li className={styles.item} name={name} key={id}>\r\n              {name}: {number}\r\n              <button\r\n                className={styles.btn}\r\n                type=\"button\"\r\n                onClick={() => onDeleteContact(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, changeFilter } from 'redux/contacts';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Container from 'components/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport ContactList from 'components/ContactList';\r\nimport Filter from 'components/Filter';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { contactsReducer } from './contacts';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devtools: process.env.NODE_ENV === 'development',\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3hWZD\",\"label\":\"ContactForm_label__S10Ft\",\"input\":\"ContactForm_input__15dBK\",\"btn\":\"ContactForm_btn__2AXGK\"};"],"sourceRoot":""}